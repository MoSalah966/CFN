---
Resources:
  # Create VPC
  MyVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: "MyVPC"

  # Create Internet Gateway
  MyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: "MyInternetGateway"

  # Attach Internet Gateway to VPC
  MyVpcGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref MyInternetGateway

  # Create Public Subnet
  MyPublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: "MyPublicSubnet"

  # Create Private Subnet
  MyPrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: "MyPrivateSubnet"

  # Create Public Route Table
  MyPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: "MyPublicRouteTable"

  # Create Private Route Table
  MyPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: "MyPrivateRouteTable"

  # Create Public Route
  MyPublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: MyVpcGatewayAttachment
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  # Associate Public Subnet with Public Route Table
  MyPublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyPublicRouteTable

  # Associate Private Subnet with Private Route Table
  MyPrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPrivateSubnet
      RouteTableId: !Ref MyPrivateRouteTable

  # Create Public Security Group
  MyPublicSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "My public security group"
      VpcId: !Ref MyVpc

  # Allow SSH access to public instances
  # MyPublicSecurityGroupSSHIngressRule
